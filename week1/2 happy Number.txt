Happy Number
Solution
	Write an algorithm to determine if a number n is "happy".
A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.
Return True if n is a happy number, and False if not.
Example: 
	Input: 19
	Output: true
	Explanation: 
	1^2 + 9^2 = 82       (1的平方 + 9的平方 ，下同)
	8^2 + 2^2 = 68
	6^2 + 8^2 = 100
	1^2 + 0^2 + 0^2 = 1

JAVA:
package happy;

import java.util.Set;
import java.util.HashSet;

public class Solution {

	
	public static boolean isHappy(int n) {
		Set<Integer> set = new HashSet<Integer>();
		
		while(n != 1) {
			int sum = 0;
			int sig = 0;
			while(n!=0) {
				
				sig = n % 10;
				sum = sig * sig + sum ;
				n = n / 10;
			}
			n = sum;
			if(set.contains(n)) {
				return false;
			}
			set.add(n);
		}
		
		return n == 1;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int tmp = 2;
		boolean ret = isHappy(tmp);
		System.out.println("The number " + tmp + " is happy number? " + ret);

	}

}


Python:


